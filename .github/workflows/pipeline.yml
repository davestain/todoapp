# The name of the workflow.
name: Build Test and Deploy

on:
  push:
    branches:
      - main
#Env variables
env:
  MONGODB_URI: ${{ secrets.MONGODB_URI }}

jobs:
  build-test-and-deploy:
    # This is telling GitHub to run the workflow on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install dependencies and run tests for the frontend application
      - name: Install and Test FrontEnd
        working-directory: ./FrontEnd
        run: |
          npm install
          npm run test

      # Install dependencies, export environment variables to be used by application and run tests for the backend application
      - name: Install and Test BackEnd
        working-directory: ./BackEnd
        run: |
          npm install
          export MONGODB_URI=$MONGODB_URI
          npm run test

      # Build a Docker image for the frontend application
      - name: Build FE Docker Image
        working-directory: ./FrontEnd
        # Build image with tag davestain/todo-app:frontend
        run: |
          docker build -t davestain/todo-app:frontend-${{github.run_number}} .

      # Build a Docker image for the backend application
      - name: Build BE Docker Image
        working-directory:
          ./BackEnd
          # Build image with tag davestain/todo-app:backend
        run: |
          docker build -t davestain/todo-app:backend-${{github.run_number}} .

      # Login to Docker Hub using credentials from repository secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker images to Docker Hub
      - name: Push Docker Images to Docker Hub
        run: |
          docker push davestain/todo-app:frontend-${{github.run_number}}
          docker push davestain/todo-app:backend-${{github.run_number}}
      # This is the step that is deploying the application to Elastic Beanstalk. (left out due to free env not ready)
      #- name: Deploy to Elastic Beanstalk
      #  uses: einaregilsson/beanstalk-deploy@v21
      #  with:
      #    aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #    aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #    application_name: ${{ secrets.EB_APP_NAME }}
      #    environment_name: ${{ secrets.EB_ENV_NAME }}
      #    region: ${{ secrets.EB_REGION }}
      #    version_label: "version-${{ github.run_number }}"
      #    deployment_package: docker-compose.yml
